{"version":3,"sources":["../../db/index.js"],"names":["Banka","users","bankAccounts","transactions","admins","staff","data","userReqData","id","Math","floor","random","email","String","userEmail","firstName","userFirstName","lastName","userLastName","password","userPassword","type","isAdmin","userResData","parseInt","userId","bankAccountData","accountNumber","createdOn","Date","owner","ownerId","bankAccountType","status","bankAccountStatus","balance","parseFloat","bankAccountBalance","dataOne","dataTwo","newBankAccountRes","openingBalance","transactionData","transactionType","cashier","cashierId","amount","transactionAmount","oldBalance","accountBalance","newBalance","transactionResData","transactionId","adminStaff","username","staffInfo","testUserOne","testUserTwo","userDataList","push","testBankAccountOne","testBankAccountTwo","testBankAccountList","testStaffOne","testStaffTwo","testStaffList","testAdminOne","testAdminTwo","testAdminList","testTransactionOne","testTransactionTwo","testTransactionList","banka","UserList","bankAccountList","staffList","adminList","transactionList"],"mappings":"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","sourcesContent":["class Banka {\n  constructor() {\n    this.users = [];\n    this.bankAccounts = [];\n    this.transactions = [];\n    this.admins = [];\n    this.staff = [];\n  }\n\n  userData(data) {\n    this.userReqData = {\n      id: Math.floor(Math.random() * 1000000000),\n      email: String(data.userEmail),\n      firstName: String(data.userFirstName),\n      lastName: String(data.userLastName),\n      password: String(data.userPassword),\n      type: 'Client',\n      isAdmin: false,\n    };\n    return this.userReqData;\n  }\n\n  createUserDataResponse(data) {\n    this.userResData = {\n      id: parseInt(data.userId, 10),\n      firstName: String(data.userFirstName),\n      lastName: String(data.userLastName),\n      email: String(data.userEmail),\n    };\n    return this.userResData;\n  }\n\n  bankAccount(data) {\n    this.bankAccountData = {\n      id: Math.floor(Math.random() * 1000000000),\n      accountNumber: Math.floor(100000000 + Math.random() * 900000000),\n      createdOn: new Date(),\n      owner: parseInt(data.ownerId, 10),\n      type: String(data.bankAccountType),\n      status: String(data.bankAccountStatus),\n      balance: parseFloat(data.bankAccountBalance),\n    };\n    return this.bankAccountData;\n  }\n\n  createBankAccountResponse(dataOne, dataTwo) {\n    this.newBankAccountRes = {\n      accountNumber: parseInt(dataOne.userId, 10),\n      firstName: String(dataTwo.userFirstName),\n      lastName: String(dataTwo.userLastName),\n      email: String(dataTwo.userEmail),\n      type: String(dataOne.bankAccountType),\n      openingBalance: parseFloat(dataOne.bankAccountBalance),\n    };\n    return this.newBankAccountRes;\n  }\n\n  transaction(data) {\n    this.transactionData = {\n      id: Math.floor(Math.random() * 1000000000),\n      createdOn: new Date(),\n      type: String(data.transactionType),\n      accountNumber: parseInt(data.accountNumber, 10),\n      cashier: parseInt(data.cashierId, 10),\n      amount: parseFloat(data.transactionAmount),\n      oldBalance: parseFloat(data.accountBalance),\n      newBalance: parseFloat(data.accountBalance) - parseFloat(data.transactionAmount),\n    };\n    return this.transactionData;\n  }\n\n  processTransaction(data) {\n    this.transactionResData = {\n      transactionId: parseInt(data.transactionId, 10),\n      accountNumber: String(data.accountNumber),\n      amount: parseFloat(data.transactionAmount),\n      cashier: parseInt(data.cashierId, 10),\n      transactionType: String(data.transactionType),\n      accountBalance: String(data.accountBalance - data.transactionAmount),\n    };\n    return this.transactionResData;\n  }\n\n  adminStaffData(data) {\n    this.adminStaff = {\n      id: Math.floor(Math.random() * 1000000000),\n      username: String(data.username),\n      password: String(data.password),\n      isAdmin: true,\n    };\n    return this.adminStaff;\n  }\n\n  staffData(data) {\n    this.staffInfo = {\n      id: Math.floor(Math.random() * 1000000000),\n      username: String(data.username),\n      password: String(data.password),\n      type: 'Staff',\n      isAdmin: false,\n    };\n    return this.staffInfo;\n  }\n\n  UserList() {\n    this.testUserOne = {\n      id: 1010101010,\n      email: 'foobar@com',\n      firstName: 'Foo',\n      lastName: 'Bar',\n      password: 'Abcderg13#isfg',\n    };\n\n    this.testUserTwo = {\n      id: 2020202020,\n      email: 'barfoo@com',\n      firstName: 'Bar',\n      lastName: 'Foo',\n      password: 'Abcderg13#isfg',\n    };\n\n    this.userDataList = [this.testUserOne, this.testUserTwo];\n    this.users.push(...this.userDataList);\n  }\n\n  bankAccountList() {\n    this.testBankAccountOne = {\n      id: 1111111111,\n      accountNumber: 1212121212,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Savings',\n      status: 'Active',\n      balance: 1000000,\n    };\n\n    this.testBankAccountTwo = {\n      id: 3333333333,\n      accountNumber: 1313131313,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Current',\n      status: 'Active',\n      balance: 1000000,\n    };\n\n    this.testBankAccountList = [this.testBankAccountOne, this.testBankAccountTwo];\n    this.bankAccounts.push(...this.testBankAccountList);\n  }\n\n  staffList() {\n    this.testStaffOne = {\n      id: 3030303030,\n      username: 'FooBar',\n      password: '12345ABC#',\n      isAdmin: false,\n    };\n\n    this.testStaffTwo = {\n      id: 4040404040,\n      username: 'BarFoo',\n      password: '12345ABC#',\n      isAdmin: false,\n    };\n    this.testStaffList = [this.testStaffOne, this.testStaffTwo];\n    this.staff.push(...this.testStaffList);\n  }\n\n  adminList() {\n    this.testAdminOne = {\n      id: 5050505050,\n      username: 'FooBar',\n      password: '12345ABC#',\n      isAdmin: true,\n    };\n\n    this.testAdminTwo = {\n      id: 6060606060,\n      username: 'BarFoo',\n      password: '12345ABC#',\n      isAdmin: true,\n    };\n\n    this.testAdminList = [this.testAdminOne, this.testAdminTwo];\n    this.admins.push(...this.testAdminList);\n  }\n\n  transactionList() {\n    this.testTransactionOne = {\n      id: 7777777777,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountOne.accountNumber,\n      cashier: this.testStaffOne.id,\n      amount: 1000,\n      oldBalance: 11000,\n      newBalance: 10000,\n    };\n\n    this.testTransactionTwo = {\n      id: 8888888888,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountTwo.accountNumber,\n      cashier: this.testStaffTwo.id,\n      amount: 2000,\n      oldBalance: 12000,\n      newBalance: 10000,\n    };\n\n    this.testTransactionList = [this.testTransactionOne, this.testTransactionTwo];\n    this.transactions.push(...this.testTransactionList);\n  }\n}\n\nconst banka = new Banka();\n\nbanka.UserList();\nbanka.bankAccountList();\nbanka.staffList();\nbanka.adminList();\nbanka.transactionList();\n\nexport default banka;\n"],"file":"index.js"}