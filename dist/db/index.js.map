{"version":3,"sources":["../../db/index.js"],"names":["Banka","users","bankAccounts","transactions","admins","staff","data","userReqData","id","Math","floor","random","email","String","userEmail","firstName","userFirstName","lastName","userLastName","password","userPassword","type","isAdmin","userResData","parseInt","bankAccountData","accountNumber","createdOn","Date","owner","ownerId","bankAccountType","status","bankAccountStatus","balance","parseFloat","bankAccountBalance","dataOne","dataTwo","newBankAccountRes","openingBalance","transactionData","transactionType","cashier","cashierId","amount","transactionAmount","oldBalance","accountBalance","newBalance","transactionResData","transactionId","adminStaff","username","staffInfo","testUserOne","testUserTwo","userDataList","push","testBankAccountOne","testBankAccountTwo","testBankAccountList","testStaffOne","testStaffTwo","testStaffList","testAdminOne","testAdminTwo","testAdminList","testTransactionOne","testTransactionTwo","testTransactionList","banka","UserList","bankAccountList","staffList","adminList","transactionList"],"mappings":"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","sourcesContent":["class Banka {\n  constructor() {\n    this.users = [];\n    this.bankAccounts = [];\n    this.transactions = [];\n    this.admins = [];\n    this.staff = [];\n  }\n\n  userData(data) {\n    this.userReqData = {\n      id: Math.floor(Math.random() * 1000000000),\n      email: String(data.userEmail),\n      firstName: String(data.userFirstName),\n      lastName: String(data.userLastName),\n      password: String(data.userPassword),\n      type: 'Client',\n      isAdmin: false,\n    };\n    return this.userReqData;\n  }\n\n  createUserDataResponse(data) {\n    this.userResData = {\n      id: parseInt(data.id, 10),\n      firstName: String(data.firstName),\n      lastName: String(data.lastName),\n      email: String(data.email),\n    };\n    return this.userResData;\n  }\n\n  bankAccount(data) {\n    this.bankAccountData = {\n      id: Math.floor(Math.random() * 1000000000),\n      accountNumber: Math.floor(100000000 + Math.random() * 900000000),\n      createdOn: new Date(),\n      owner: parseInt(data.ownerId, 10),\n      type: String(data.bankAccountType),\n      status: String(data.bankAccountStatus),\n      balance: parseFloat(data.bankAccountBalance),\n    };\n    return this.bankAccountData;\n  }\n\n  createBankAccountResponse(dataOne, dataTwo) {\n    this.newBankAccountRes = {\n      accountNumber: parseInt(dataOne.id, 10),\n      firstName: String(dataTwo.firstName),\n      lastName: String(dataTwo.lastName),\n      email: String(dataTwo.email),\n      type: String(dataOne.type),\n      openingBalance: parseFloat(dataOne.balance),\n    };\n    return this.newBankAccountRes;\n  }\n\n  transaction(data) {\n    this.transactionData = {\n      id: Math.floor(Math.random() * 1000000000),\n      createdOn: new Date(),\n      type: String(data.transactionType),\n      accountNumber: parseInt(data.accountNumber, 10),\n      cashier: parseInt(data.cashierId, 10),\n      amount: parseFloat(data.transactionAmount),\n      oldBalance: parseFloat(data.accountBalance),\n      newBalance: parseFloat(data.accountBalance) - parseFloat(data.transactionAmount),\n    };\n    return this.transactionData;\n  }\n\n  processTransaction(data) {\n    this.transactionResData = {\n      transactionId: parseInt(data.id, 10),\n      accountNumber: String(data.accountNumber),\n      amount: parseFloat(data.amount),\n      cashier: parseInt(data.cashierId, 10),\n      transactionType: String(data.type),\n      accountBalance: String(data.newBalance),\n    };\n    return this.transactionResData;\n  }\n\n  adminStaffData(data) {\n    this.adminStaff = {\n      id: Math.floor(Math.random() * 1000000000),\n      username: String(data.username),\n      password: String(data.password),\n      isAdmin: true,\n    };\n    return this.adminStaff;\n  }\n\n  staffData(data) {\n    this.staffInfo = {\n      id: Math.floor(Math.random() * 1000000000),\n      username: String(data.username),\n      password: String(data.password),\n      type: 'Staff',\n      isAdmin: false,\n    };\n    return this.staffInfo;\n  }\n\n  UserList() {\n    this.testUserOne = {\n      id: 1010101010,\n      email: 'foobar@mail.com',\n      firstName: 'Foo',\n      lastName: 'Bar',\n      password: 'AbcDFer123*@is!',\n    };\n\n    this.testUserTwo = {\n      id: 2020202020,\n      email: 'barfoo@mail.com',\n      firstName: 'Bar',\n      lastName: 'Foo',\n      password: 'AbcDFer123*@is!',\n    };\n\n    this.userDataList = [this.testUserOne, this.testUserTwo];\n    this.users.push(...this.userDataList);\n  }\n\n  bankAccountList() {\n    this.testBankAccountOne = {\n      id: 1111111111,\n      accountNumber: 1212121212,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Savings',\n      status: 'Active',\n      balance: 1000000,\n    };\n\n    this.testBankAccountTwo = {\n      id: 3333333333,\n      accountNumber: 1313131313,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Current',\n      status: 'Active',\n      balance: 1000000,\n    };\n\n    this.testBankAccountList = [this.testBankAccountOne, this.testBankAccountTwo];\n    this.bankAccounts.push(...this.testBankAccountList);\n  }\n\n  staffList() {\n    this.testStaffOne = {\n      id: 3030303030,\n      username: 'FooBar',\n      password: 'AbcDFer123*@is!',\n      isAdmin: false,\n    };\n\n    this.testStaffTwo = {\n      id: 4040404040,\n      username: 'BarFoo',\n      password: 'AbcDFer123*@is!',\n      isAdmin: false,\n    };\n    this.testStaffList = [this.testStaffOne, this.testStaffTwo];\n    this.staff.push(...this.testStaffList);\n  }\n\n  adminList() {\n    this.testAdminOne = {\n      id: 5050505050,\n      username: 'FooBar',\n      password: 'AbcDFer123*@is!',\n      isAdmin: true,\n    };\n\n    this.testAdminTwo = {\n      id: 6060606060,\n      username: 'BarFoo',\n      password: 'AbcDFer123*@is!',\n      isAdmin: true,\n    };\n\n    this.testAdminList = [this.testAdminOne, this.testAdminTwo];\n    this.admins.push(...this.testAdminList);\n  }\n\n  transactionList() {\n    this.testTransactionOne = {\n      id: 7777777777,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountOne.accountNumber,\n      cashier: this.testStaffOne.id,\n      amount: 1000,\n      oldBalance: 11000,\n      newBalance: 10000,\n    };\n\n    this.testTransactionTwo = {\n      id: 8888888888,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountTwo.accountNumber,\n      cashier: this.testStaffTwo.id,\n      amount: 2000,\n      oldBalance: 12000,\n      newBalance: 10000,\n    };\n\n    this.testTransactionList = [this.testTransactionOne, this.testTransactionTwo];\n    this.transactions.push(...this.testTransactionList);\n  }\n}\n\nconst banka = new Banka();\n\nbanka.UserList();\nbanka.bankAccountList();\nbanka.staffList();\nbanka.adminList();\nbanka.transactionList();\n\nexport default banka;\n"],"file":"index.js"}