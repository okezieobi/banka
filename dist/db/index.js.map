{"version":3,"sources":["../../db/index.js"],"names":["Banka","users","bankAccounts","transactions","admins","staff","data","userReqData","id","Math","floor","random","email","String","userEmail","firstName","userFirstName","lastName","userLastName","password","userPassword","type","isAdmin","userResData","parseInt","bankAccountData","accountNumber","createdOn","Date","owner","bankAccountType","status","balance","dataOne","dataTwo","newBankAccountRes","openingBalance","parseFloat","updateStatus","dataThree","transactionData","account_number","cashier","amount","transactionAmount","oldBalance","accountBalance","newBalance","toFixed","transactionResData","transactionId","transactionType","adminStaff","username","staffInfo","testUserOne","testUserTwo","userDataList","push","testBankAccountOne","testBankAccountTwo","testBankAccountList","testStaffOne","testStaffTwo","testStaffList","testAdminOne","testAdminTwo","testAdminList","testTransactionOne","testTransactionTwo","testTransactionList","banka","UserList","bankAccountList","staffList","adminList","transactionList"],"mappings":"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","sourcesContent":["class Banka {\n  constructor () {\n    this.users = [];\n    this.bankAccounts = [];\n    this.transactions = [];\n    this.admins = [];\n    this.staff = [];\n  }\n\n  userData( data ) {\n    this.userReqData = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      email: String( data.userEmail ),\n      firstName: String( data.userFirstName ),\n      lastName: String( data.userLastName ),\n      password: String( data.userPassword ),\n      type: 'Client',\n      isAdmin: false,\n    };\n    return this.userReqData;\n  }\n\n  createUserDataResponse( data ) {\n    this.userResData = {\n      id: parseInt( data.id, 10 ),\n      firstName: String( data.firstName ),\n      lastName: String( data.lastName ),\n      email: String( data.email ),\n    };\n    return this.userResData;\n  }\n\n  bankAccount( data ) {\n    this.bankAccountData = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      accountNumber: Math.floor( 100000000 + Math.random() * 900000000 ),\n      createdOn: new Date(),\n      owner: parseInt( data[ 'owner-id' ], 10 ),\n      type: String( data.bankAccountType ),\n      status: 'Active',\n      balance: 0.00,\n    };\n    return this.bankAccountData;\n  }\n\n  createBankAccountResponse( dataOne, dataTwo ) {\n    this.newBankAccountRes = {\n      accountNumber: parseInt( dataOne.accountNumber, 10 ),\n      firstName: String( dataTwo.firstName ),\n      lastName: String( dataTwo.lastName ),\n      email: String( dataTwo.email ),\n      type: String( dataOne.type ),\n      openingBalance: parseFloat( dataOne.balance ),\n    };\n    return this.newBankAccountRes;\n  }\n\n  updateAccountStatus( data ) {\n    this.updateStatus = {\n      accountNumber: data.accountNumber,\n      status: data.status,\n    }\n    return this.updateStatus;\n  }\n\n  debitAccountTransaction( dataOne, dataTwo, dataThree ) {\n    this.transactionData = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      createdOn: new Date(),\n      type: 'Debit',\n      accountNumber: parseInt( dataTwo.account_number, 10 ),\n      cashier: parseInt( dataThree[ 'cashier-id' ], 10 ),\n      amount: parseFloat( dataOne.transactionAmount ),\n      oldBalance: parseFloat( dataTwo.accountBalance ),\n      newBalance: parseFloat( ( parseFloat( dataTwo.accountBalance )\n        - parseFloat( dataOne.transactionAmount ) ).toFixed( 2 ) ),\n    };\n    return this.transactionData;\n  }\n\n  creditAccountTransaction( dataOne, dataTwo, dataThree ) {\n    this.transactionData = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: parseInt( dataTwo.account_number, 10 ),\n      cashier: parseInt( dataThree[ 'cashier-id' ], 10 ),\n      amount: parseFloat( dataOne.transactionAmount ),\n      oldBalance: parseFloat( dataTwo.accountBalance ),\n      newBalance: parseFloat( ( parseFloat( dataTwo.accountBalance )\n        + parseFloat( dataOne.transactionAmount ) ).toFixed( 2 ) ),\n    };\n    return this.transactionData;\n  }\n\n  transactionResponse( data ) {\n    this.transactionResData = {\n      transactionId: parseInt( data.id, 10 ),\n      accountNumber: String( data.accountNumber ),\n      amount: parseFloat( data.amount ),\n      cashier: parseInt( data.cashier, 10 ),\n      transactionType: String( data.type ),\n      accountBalance: String( data.newBalance ),\n    };\n    return this.transactionResData;\n  }\n\n  adminStaffData( data ) {\n    this.adminStaff = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      username: String( data.username ),\n      password: String( data.password ),\n      isAdmin: true,\n    };\n    return this.adminStaff;\n  }\n\n  staffData( data ) {\n    this.staffInfo = {\n      id: Math.floor( Math.random() * 1000000000 ),\n      username: String( data.username ),\n      password: String( data.password ),\n      type: 'Staff',\n      isAdmin: false,\n    };\n    return this.staffInfo;\n  }\n\n  UserList() {\n    this.testUserOne = {\n      id: 1010101010,\n      email: 'foobar@mail.com',\n      firstName: 'Foo',\n      lastName: 'Bar',\n      password: 'AbcDFer123*@is!',\n      type: 'Client',\n      isAdmin: false,\n    };\n\n    this.testUserTwo = {\n      id: 2020202020,\n      email: 'barfoo@mail.com',\n      firstName: 'Bar',\n      lastName: 'Foo',\n      password: 'AbcDFer123*@is!',\n      type: 'Client',\n      isAdmin: false,\n    };\n\n    this.userDataList = [ this.testUserOne, this.testUserTwo ];\n    this.users.push( ...this.userDataList );\n  }\n\n  bankAccountList() {\n    this.testBankAccountOne = {\n      id: 1111111111,\n      accountNumber: 1212121212,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Savings',\n      status: 'Active',\n      balance: 11000.00,\n    };\n\n    this.testBankAccountTwo = {\n      id: 3333333333,\n      accountNumber: 1313131313,\n      createdOn: new Date(),\n      owner: this.testUserOne.id,\n      type: 'Current',\n      status: 'Active',\n      balance: 12000.00,\n    };\n\n    this.testBankAccountList = [ this.testBankAccountOne, this.testBankAccountTwo ];\n    this.bankAccounts.push( ...this.testBankAccountList );\n  }\n\n  staffList() {\n    this.testStaffOne = {\n      id: 3030303030,\n      username: 'FooBar',\n      password: 'AbcDFer123*@is!',\n      type: 'Staff',\n      isAdmin: false,\n    };\n\n    this.testStaffTwo = {\n      id: 4040404040,\n      username: 'BarFoo',\n      password: 'AbcDFer123*@is!',\n      type: 'Staff',\n      isAdmin: false,\n    };\n    this.testStaffList = [ this.testStaffOne, this.testStaffTwo ];\n    this.staff.push( ...this.testStaffList );\n  }\n\n  adminList() {\n    this.testAdminOne = {\n      id: 5050505050,\n      username: 'FooBar',\n      password: 'AbcDFer123*@is!',\n      isAdmin: true,\n    };\n\n    this.testAdminTwo = {\n      id: 6060606060,\n      username: 'BarFoo',\n      password: 'AbcDFer123*@is!',\n      isAdmin: true,\n    };\n\n    this.testAdminList = [ this.testAdminOne, this.testAdminTwo ];\n    this.admins.push( ...this.testAdminList );\n  }\n\n  transactionList() {\n    this.testTransactionOne = {\n      id: 7777777777,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountOne.accountNumber,\n      cashier: this.testStaffOne.id,\n      amount: 1000.00,\n      oldBalance: 11000.00,\n      newBalance: 10000.00,\n    };\n\n    this.testTransactionTwo = {\n      id: 8888888888,\n      createdOn: new Date(),\n      type: 'Credit',\n      accountNumber: this.testBankAccountTwo.accountNumber,\n      cashier: this.testStaffTwo.id,\n      amount: 2000.00,\n      oldBalance: 12000.00,\n      newBalance: 10000.00,\n    };\n\n    this.testTransactionList = [ this.testTransactionOne, this.testTransactionTwo ];\n    this.transactions.push( ...this.testTransactionList );\n  }\n}\n\nconst banka = new Banka();\n\nbanka.UserList();\nbanka.bankAccountList();\nbanka.staffList();\nbanka.adminList();\nbanka.transactionList();\n\nexport default banka;\n"],"file":"index.js"}