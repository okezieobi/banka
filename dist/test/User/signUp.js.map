{"version":3,"sources":["../../../test/User/signUp.js"],"names":["chai","use","chaiHttp","describe","it","testData","userFirstName","userLastName","userEmail","userPassword","request","app","post","send","response","to","have","status","body","be","an","property","equal","data","undefined"],"mappings":"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","sourcesContent":["import {\n  expect,\n  chai,\n  chaiHttp,\n  app,\n} from '../index';\n\nchai.use(chaiHttp);\n\ndescribe('Test endpoints at \"/api/v1/auth/signup\" to create a User with POST', () => {\n  it('Should create a User at \"/api/v1/auth/signup\" with POST if all request inputs are valid', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(201);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(201);\n    expect(response.body).to.have.property('data');\n    expect(response.body.data).to.have.property('id');\n    expect(response.body.data).to.have.property('firstName').equal(testData.userFirstName);\n    expect(response.body.data).to.have.property('lastName').equal(testData.userLastName);\n    expect(response.body.data).to.have.property('email').equal(testData.userEmail);\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user first name is undefined', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userFirstName = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('First name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user first name is an empty string', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userFirstName = '';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('First name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user first name is null', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userFirstName = null;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('First name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user first name does not exist', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    delete testData.userFirstName;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('First name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user first name are not letters', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userFirstName = '000@342';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('First name must be letters');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user last name is undefined', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userLastName = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Last name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user last name is an empty string', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userLastName = '';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Last name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user last name is null', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userLastName = null;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Last name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user last name does not exist', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    delete testData.userLastName;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Last name is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user last name are not letters', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userLastName = '9834#42*!';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Last name must be letters');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email is undefined', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userEmail = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email is an empty string', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userEmail = '';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email is null', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userEmail = null;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email does not exist', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    delete testData.userEmail;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email format is wrong', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userEmail = 'haha@com';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email format is wrong');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user email has already been registered', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userEmail = 'foobar@mail.com';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('User exists, please sign in');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password is undefined', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password is an empty string', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = '';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password is null', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = null;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password does not exist', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    delete testData.userPassword;\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password is not a minimum of 8 characters', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = '1OdBcd!';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password does not have at least 1 upper case letter', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = '1234aodbcd!';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password does not have at least 1 lower case letter', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = '1234AODBCD!';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password does not have at least 1 number', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = 'odedeAODBCD!';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT create a User at \"/api/v1/auth/signup\" if user password does not have at least 1 special character', async () => {\n    const testData = {\n      userFirstName: 'Frank',\n      userLastName: 'Okezie',\n      userEmail: 'haha@mail.com',\n      userPassword: '1234AOdBcd!',\n    };\n    testData.userPassword = 'odedeAODBCD123';\n    const response = await chai.request(app).post('/api/v1/auth/signup').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n});\n"],"file":"signUp.js"}