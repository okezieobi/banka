{"version":3,"sources":["../../../test/User/signIn.js"],"names":["chai","use","chaiHttp","describe","it","testData","userEmail","userPassword","request","app","post","send","response","to","have","status","body","be","an","property","equal","data","undefined"],"mappings":"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","sourcesContent":["import {\n  expect,\n  chai,\n  chaiHttp,\n  app,\n} from '../index';\n\nchai.use(chaiHttp);\n\ndescribe('Test endpoints at \"/api/v1/auth/signin\" to sign in a User with POST', () => {\n  it('Should create a User at \"/api/v1/auth/signin\" with POST if all request inputs are valid', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(200);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(200);\n    expect(response.body).to.have.property('data');\n    expect(response.body.data).to.have.property('id');\n    expect(response.body.data).to.have.property('firstName');\n    expect(response.body.data).to.have.property('lastName');\n    expect(response.body.data).to.have.property('email').equal(testData.userEmail);\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user email is undefined', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userEmail = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user email is an empty string', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userEmail = '';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user email is null', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userEmail = null;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user email does not exist', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    delete testData.userEmail;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Email is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user email has not been registered', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userEmail = 'haha@mail.com';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('User does not exist, please sign up');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password is undefined', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = undefined;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT sign in  a User at \"/api/v1/auth/signin\" if user password is an empty string', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = '';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password is null', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = null;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not exist', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    delete testData.userPassword;\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password is required');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password is not a minimum of 8 characters', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = 'dBcd!';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not have at least 1 upper case letter', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = '1234aodbcd!';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not have at least 1 lower case letter', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = '1234AODBCD!';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not have at least 1 number', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = 'odedeAODBCD!@';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not have at least 1 special character', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = 'odedeAODBCD123';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password must be eight characters minimum, at least one uppercase letter, one lowercase letter, one number and one special character');\n  });\n\n  it('Should NOT sign in a User at \"/api/v1/auth/signin\" if user password does not not match with input password', async () => {\n    const testData = {\n      userEmail: 'foobar@mail.com',\n      userPassword: 'AbcDFer123*@is!',\n    };\n    testData.userPassword = 'AbcDFer123*@is!90';\n    const response = await chai.request(app).post('/api/v1/auth/signin').send(testData);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Password does not match user');\n  });\n});\n"],"file":"signIn.js"}