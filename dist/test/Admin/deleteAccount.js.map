{"version":3,"sources":["../../../test/Admin/deleteAccount.js"],"names":["chai","use","chaiHttp","describe","it","testHeader","accountNumber","request","app","delete","set","response","to","have","status","body","be","an","property","equal"],"mappings":"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","sourcesContent":["import {\n  expect,\n  chai,\n  chaiHttp,\n  app,\n} from '../index';\n\nchai.use(chaiHttp);\n\ndescribe('Test endpoints at \"/api/v1/accounts/:account_number\" to delete a bank account and all associated transactions as a signed in Admin with DELETE', () => {\n  it('Should delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if all request headers and params are valid', async () => {\n    const testHeader = '5050505050';\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(200);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(200);\n    expect(response.body).to.have.property('message').equal('Account successfully deleted');\n  });\n\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if admin id is an empty string', async () => {\n    const testHeader = '';\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Admin id is required');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if admin id is not a number', async () => {\n    const testHeader = 'hahahahahah';\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Admin id must be numbers');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if admin id is null', async () => {\n    const testHeader = null;\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Admin id must be numbers');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if admin id is not found', async () => {\n    const testHeader = '84933948939398';\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(404);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(404);\n    expect(response.body).to.have.property('error').equal('Admin not found, only registered admins can delete a bank account');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if account number is not a number', async () => {\n    const testHeader = '5050505050';\n    const accountNumber = 'hahahahah';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(400);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(400);\n    expect(response.body).to.have.property('error').equal('Account number must be numbers');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if account number is not found', async () => {\n    const testHeader = '5050505050';\n    const accountNumber = '112323222223';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(404);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(404);\n    expect(response.body).to.have.property('error').equal('Account number not found');\n  });\n\n  it('Should NOT delete a bank account and all associated transactions as a signed in Admin at \"/api/v1/accounts/:account_number\" with DELETE if account number has already been deleted', async () => {\n    const testHeader = '5050505050';\n    const accountNumber = '1212121212';\n    const response = await chai.request(app).delete(`/api/v1/accounts/${accountNumber}`).set('admin-id', testHeader);\n    expect(response).to.have.status(404);\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('status').equal(404);\n    expect(response.body).to.have.property('error').equal('Account number not found');\n  });\n});\n"],"file":"deleteAccount.js"}