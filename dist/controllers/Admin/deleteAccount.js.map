{"version":3,"sources":["../../../controllers/Admin/deleteAccount.js"],"names":["logic","deleteAccount","req","res","headers","services","errorResponse","checkNumber","findById","data","admins","params","account_number","bankAccount","bankAccounts","splice","indexOf","transactions","filter","transaction","accountNumber","successResMessage"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKAA,eAAMC,aAAN,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAI,CAACD,GAAG,CAACE,OAAJ,CAAY,UAAZ,CAAL,EAA8B,OAAOC,kBAASC,aAAT,CAAuBH,GAAvB,EAA4B,GAA5B,EAAiC,sBAAjC,CAAP;AAC9B,MAAI,CAACE,kBAASE,WAAT,CAAqBL,GAAG,CAACE,OAAJ,CAAY,UAAZ,CAArB,CAAL,EAAoD,OAAOC,kBAASC,aAAT,CAAuBH,GAAvB,EAA4B,GAA5B,EAAiC,0BAAjC,CAAP;AACpD,MAAI,CAACE,kBAASG,QAAT,CAAkBC,YAAKC,MAAvB,EAA+BR,GAAG,CAACE,OAAnC,EAA4C,IAA5C,EAAkD,UAAlD,CAAL,EAAoE,OAAOC,kBAASC,aAAT,CAAuBH,GAAvB,EAA4B,GAA5B,EAAiC,mEAAjC,CAAP;AACpE,MAAI,CAACE,kBAASE,WAAT,CAAqBL,GAAG,CAACS,MAAJ,CAAWC,cAAhC,CAAL,EAAsD,OAAOP,kBAASC,aAAT,CAAuBH,GAAvB,EAA4B,GAA5B,EAAiC,gCAAjC,CAAP;;AACtD,MAAMU,WAAW,GAAGR,kBAASG,QAAT,CAAkBC,YAAKK,YAAvB,EAAqCZ,GAAG,CAACS,MAAzC,EAAiD,eAAjD,EAAkE,gBAAlE,CAApB;;AACA,MAAI,CAACE,WAAL,EAAkB,OAAOR,kBAASC,aAAT,CAAuBH,GAAvB,EAA4B,GAA5B,EAAiC,0BAAjC,CAAP;;AAClBM,cAAKK,YAAL,CAAkBC,MAAlB,CAAyBN,YAAKK,YAAL,CAAkBE,OAAlB,CAA0BH,WAA1B,CAAzB,EAAiE,CAAjE;;AACAJ,cAAKQ,YAAL,GAAoBR,YAAKQ,YAAL,CAAkBC,MAAlB,CAClB,UAAAC,WAAW;AAAA,WAAIA,WAAW,CAACC,aAAZ,KAA8BP,WAAW,CAACO,aAA9C;AAAA,GADO,CAApB;AAGA,SAAOf,kBAASgB,iBAAT,CAA2BlB,GAA3B,EAAgC,GAAhC,EAAqC,8BAArC,CAAP;AACD,CAZD;;eAceH,eAAMC,a","sourcesContent":["// @ts-ignore\nimport logic from '../index';\nimport data from '../../db';\nimport services from '../../services';\n\nlogic.deleteAccount = (req, res) => {\n  if (!req.headers['admin-id']) return services.errorResponse(res, 400, 'Admin id is required');\n  if (!services.checkNumber(req.headers['admin-id'])) return services.errorResponse(res, 400, 'Admin id must be numbers');\n  if (!services.findById(data.admins, req.headers, 'id', 'admin-id')) return services.errorResponse(res, 404, 'Admin not found, only registered admins can delete a bank account');\n  if (!services.checkNumber(req.params.account_number)) return services.errorResponse(res, 400, 'Account number must be numbers');\n  const bankAccount = services.findById(data.bankAccounts, req.params, 'accountNumber', 'account_number');\n  if (!bankAccount) return services.errorResponse(res, 404, 'Account number not found');\n  data.bankAccounts.splice(data.bankAccounts.indexOf(bankAccount), 1);\n  data.transactions = data.transactions.filter(\n    transaction => transaction.accountNumber !== bankAccount.accountNumber,\n  );\n  return services.successResMessage(res, 200, 'Account successfully deleted');\n};\n\nexport default logic.deleteAccount;\n"],"file":"deleteAccount.js"}